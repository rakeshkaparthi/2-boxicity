/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package boxicity;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

/**
 *
 * @author Bhavesh
 */
public class boxicity extends javax.swing.JFrame {

    /**
     * Creates new form boxicity
     */
    JFrame boxicityFrame = new JFrame("Draw Boxicity");
    JFrame graphFrame = new JFrame("Draw Graph");
    
    public boxicity() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        numOfVertices = new javax.swing.JTextField();
        showBoxicity = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        rectanglesParam = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        showGraph = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("    Number of Vertices");

        numOfVertices.setText("5");
        numOfVertices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numOfVerticesActionPerformed(evt);
            }
        });

        showBoxicity.setText("Show Boxicity");
        showBoxicity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBoxicityActionPerformed(evt);
            }
        });

        rectanglesParam.setColumns(20);
        rectanglesParam.setRows(5);
        rectanglesParam.setText("20 20 100 100,\n60 80 150 100,\n150 100 180 120,\n10 140 160 150,\n80 250 150 100");
        jScrollPane1.setViewportView(rectanglesParam);

        jLabel2.setText("NodeName Lower Left Upper Right");

        showGraph.setText("Show Graph");
        showGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showGraphActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numOfVertices))
                            .addComponent(showBoxicity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(showGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numOfVertices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showBoxicity, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numOfVerticesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numOfVerticesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numOfVerticesActionPerformed

    private void showBoxicityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBoxicityActionPerformed
        // TODO add your handling code here:
                boxicityFrame.dispose();
                boxicityFrame = new JFrame("Draw Boxicity");
                boxicityFrame.setLocation(250, 0);
                //frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                int num = Integer.parseInt(numOfVertices.getText());
                String[] rect = rectanglesParam.getText().trim().split(",");        
                //System.out.println(rect.length);
                //System.out.println("numOfVertices: "+num);
                boxicityFrame.add(new JPanel() {
                    @Override
                    protected void paintComponent(Graphics g) {
                        //
                        // Draw a rectangle using Rectangle2D class
                        //
                        Graphics2D g2 = (Graphics2D) g;
                        
                        for(int i=0; i<num; i++) {
                            String[] rectAxis = rect[i].trim().split(" ");
                            //System.out.println(i+": "+rect[i].trim());
                            //System.out.println(Integer.parseInt(rectAxis[0])+","+ Integer.parseInt(rectAxis[1])+","+ Integer.parseInt(rectAxis[2])+","+ Integer.parseInt(rectAxis[3]));
                            g2.setColor(Color.RED);
                            g2.drawString((char)(i+65)+"", Integer.parseInt(rectAxis[0])+10, Integer.parseInt(rectAxis[1])+20);
                            g2.setColor(Color.BLUE);
                            g2.draw(new Rectangle2D.Double(Integer.parseInt(rectAxis[0]), Integer.parseInt(rectAxis[1]), Integer.parseInt(rectAxis[2]), Integer.parseInt(rectAxis[3])));
                        }
                        
                        /*
                        g2.draw(new Rectangle2D.Double(20, 20, 100, 100));
                        g2.draw(new Rectangle2D.Double(60, 80, 150, 100));
                        g2.draw(new Rectangle2D.Double(150, 100, 180, 120));
                        g2.draw(new Rectangle2D.Double(10, 140, 120, 150));
                        g2.draw(new Rectangle2D.Double(80, 250, 150, 100));
                        */
                    }
                }, BorderLayout.CENTER);

                boxicityFrame.pack();
                boxicityFrame.setSize(new Dimension(400, 585));
                boxicityFrame.setVisible(true);
        
    }//GEN-LAST:event_showBoxicityActionPerformed

    private void showGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showGraphActionPerformed
        // TODO add your handling code here:
                graphFrame.dispose();
                graphFrame = new JFrame("Draw Graph");
                graphFrame.setLocation(630, 0);
                //frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                int num = Integer.parseInt(numOfVertices.getText());
                String[] rect = rectanglesParam.getText().trim().split(",");        
                //System.out.println(rect.length);
                //System.out.println("numOfVertices: "+num);
                graphFrame.add(new JPanel() {
                    @Override
                    protected void paintComponent(Graphics g) {
                        //
                        // Draw a rectangle using Rectangle2D class
                        //
                        Graphics2D g2 = (Graphics2D) g;
                        
                        for(int i=0; i<num; i++) {
                            String[] rectAxis = rect[i].trim().split(" ");
                            //System.out.println(i+": "+rect[i].trim());
                            //System.out.println(Integer.parseInt(rectAxis[0])+","+ Integer.parseInt(rectAxis[1])+","+ Integer.parseInt(rectAxis[2])+","+ Integer.parseInt(rectAxis[3]));
                            int x1= Integer.parseInt(rectAxis[0]),
                                y1= Integer.parseInt(rectAxis[1]),
                                width1= Integer.parseInt(rectAxis[2]),
                                height1= Integer.parseInt(rectAxis[3]);
                            g2.setColor(Color.RED);
                            g2.drawString((char)(i+65)+"", x1+20, y1+30);
                            g2.setColor(Color.BLUE);
                            for(int j=i+1; j<num; j++) {
                                String[] checkRectAxis = rect[j].trim().split(" ");
                                int x2= Integer.parseInt(checkRectAxis[0]),
                                y2= Integer.parseInt(checkRectAxis[1]),
                                width2= Integer.parseInt(checkRectAxis[2]),
                                height2= Integer.parseInt(checkRectAxis[3]);
                                    
                             if(x1 < x2 + width2 && x1 + width1 > x2 && y1 < y2 + height2 && y1 + height1 > y2) {
                                g2.drawLine(x1+20, y1+30, x2+20, y2+30); 
                             }
                            }
                            //g2.draw(new Rectangle2D.Double(Integer.parseInt(rectAxis[0]), Integer.parseInt(rectAxis[1]), Integer.parseInt(rectAxis[2]), Integer.parseInt(rectAxis[3])));
                        }
                        //g2.drawLine(40, 50, 80, 110);
                        /*
                        g2.draw(new Rectangle2D.Double(20, 20, 100, 100));
                        g2.draw(new Rectangle2D.Double(60, 80, 150, 100));
                        g2.draw(new Rectangle2D.Double(150, 100, 180, 120));
                        g2.draw(new Rectangle2D.Double(10, 140, 120, 150));
                        g2.draw(new Rectangle2D.Double(80, 250, 150, 100));
                        */
                    }
                }, BorderLayout.CENTER);

                graphFrame.pack();
                graphFrame.setSize(new Dimension(400, 585));
                graphFrame.setVisible(true);
    }//GEN-LAST:event_showGraphActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(boxicity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(boxicity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(boxicity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(boxicity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new boxicity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numOfVertices;
    private javax.swing.JTextArea rectanglesParam;
    private javax.swing.JButton showBoxicity;
    private javax.swing.JButton showGraph;
    // End of variables declaration//GEN-END:variables
}
